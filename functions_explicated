PRESENTATION DU BACK
Idée générale:
- game.py est le fichier le plus macroscopique du back: il permet d'instancier une partie, il contient toutes les variables générales (tailles du tableau de jeu, portée d'une passe en-avant pour tous les joueurs...). Une fois la partie lancée, il attribue le début et la fin de tour de chaque joueur. Afin que le joueur puisse jouer, on s'intéresse au fichier players.py
- player.py est le fichier intermédiaire du back: il permet au joueur dont c'est le tour de placer en début de partie ses joueurs et de choisir ses deux actions à réaliser pendant chaque tour de la partie. Afin de réaliser les actions, on s'intéresse au fichier actions.py
- actions.py  est le fichier le plus bas du back: il permet de réaliser toutes les actions pouvant être choisies par le joueur. Il contient la plupart des interactions front-back: affichage sur le tableau de jeu (back -> front), prise en compte des inputs sur le tableau de jeu (front -> back) afin de déplacer effectivement les joueurs...

ACTIONS.PY

Fonctions générales:
- ask_if_action_finished(): fonction back -> front -> back qui demande au joueur s'il a fini de jouer. Cette fonction est utilisée par exemple lorsqu'un joueur ne s'est pas déplacé autant qu'il le pourrait. Il peut pourtant choisir de changer d'action (passe de la balle à un coéquipier) avant de continuer à se déplacer.

Fonctions pour déplacer un rugbyman:
- available_move_positions(int: current_x,int: current_y, int: scope, game): fonction qui renvoie toutes les positions où un joueur positionné en [current_x, current_y] peut aller, sous la forme d'un tableau 2D int[n][2] . Cette fonction doit être utilisée dans le front pour afficher les positions où peut se déplacer le joueur.
- input_move_rugbyman(available_positions): fonction qui remplace temporairement une fonction qui sera codée en front. Etant données toutes les positions disponibles, le joueur choisit sur laquelle il peut se déplacer. La fonction renvoie un tableau 1D int[2].
- move_rugbyman(rugbyman, game, moves_executed)

Fonctions pour faire une passe
- available_pass_positions(Color.color: color, int: current_x, int: current_y, int: max_x, int: max_y, int: pass_scope, game)
- input_pass_ball(available_positions)
- pass_ball(rugbyman, game, pass_scope)

Fonctions pour tacler
- available_tackle_positions(Color.color: color, int: current_x, int: current_y, int: scope, game)
- pick_card(player)
- input_tackle(available_move_positions)
- tackle(rugbyman, game)

Fonctions pour faire un en-avant
- available_forward_pass(Color.color: color, int: current_x, int: current_y, int: forward_pass_scope, game)
- input_forward_pass(available_forward_pass)
- forward_pass(rugbyman, game)

Fonction pour marquer
- score(rugbyman, game)